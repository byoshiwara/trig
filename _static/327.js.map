{"version":3,"file":"327.js","mappings":"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","sources":["webpack://WebComponents/./runestone/shortanswer/js/shortanswer.js","webpack://WebComponents/./runestone/shortanswer/js/timed_shortanswer.js","webpack://WebComponents/./runestone/timed/js/timed.js"],"sourcesContent":["/*==========================================\n=======    Master shortanswer.js    ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone shortanswer component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/2/15                ===\n===              Brad Miller             ===\n===                2019                  ===\n==========================================*/\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"./../css/shortanswer.css\";\n\nexport default class ShortAnswer extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        if (opts) {\n            var orig = opts.orig; // entire <p> element that will be replaced by new HTML\n            this.useRunestoneServices =\n                opts.useRunestoneServices || eBookConfig.useRunestoneServices;\n            this.origElem = orig;\n            this.divid = orig.id;\n            this.question = this.origElem.innerHTML;\n            this.optional = false;\n            this.attachURL = opts.attachURL;\n            if ($(this.origElem).is(\"[data-optional]\")) {\n                this.optional = true;\n            }\n            if ($(this.origElem).is(\"[data-mathjax]\")) {\n                this.mathjax = true;\n            }\n            this.mathjax = true;\n            if ($(this.origElem).is(\"[data-attachment]\")) {\n                this.attachment = true;\n            }\n            this.placeholder =\n                $(this.origElem).data(\"placeholder\") ||\n                \"Write your answer here\";\n            this.renderHTML();\n            this.caption = \"shortanswer\";\n            this.addCaption(\"runestone\");\n            this.checkServer(\"shortanswer\", true);\n            if (typeof Prism !== \"undefined\") {\n                Prism.highlightAllUnder(this.containerDiv);\n            }\n        }\n    }\n\n    renderHTML() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.newForm = document.createElement(\"form\");\n        this.newForm.id = this.divid + \"_journal\";\n        this.newForm.name = this.newForm.id;\n        this.newForm.action = \"\";\n        this.containerDiv.appendChild(this.newForm);\n        this.fieldSet = document.createElement(\"fieldset\");\n        this.newForm.appendChild(this.fieldSet);\n        this.firstLegendDiv = document.createElement(\"div\");\n        this.firstLegendDiv.innerHTML = this.question;\n        $(this.firstLegendDiv).addClass(\"journal-question\");\n        this.fieldSet.appendChild(this.firstLegendDiv);\n        this.jInputDiv = document.createElement(\"div\");\n        this.jInputDiv.id = this.divid + \"_journal_input\";\n        this.fieldSet.appendChild(this.jInputDiv);\n        this.jOptionsDiv = document.createElement(\"div\");\n        $(this.jOptionsDiv).addClass(\"journal-options\");\n        this.jInputDiv.appendChild(this.jOptionsDiv);\n        this.jLabel = document.createElement(\"label\");\n        $(this.jLabel).addClass(\"radio-inline\");\n        this.jOptionsDiv.appendChild(this.jLabel);\n        this.jTextArea = document.createElement(\"textarea\");\n        let self = this;\n        this.jTextArea.onchange = function () {\n            self.isAnswered = true;\n        };\n        this.jTextArea.id = this.divid + \"_solution\";\n        $(this.jTextArea).attr(\"aria-label\", \"textarea\");\n        this.jTextArea.placeholder = this.placeholder;\n        $(this.jTextArea).css(\"display:inline, width:530px\");\n        $(this.jTextArea).addClass(\"form-control\");\n        this.jTextArea.rows = 4;\n        this.jTextArea.cols = 50;\n        this.jLabel.appendChild(this.jTextArea);\n        this.jTextArea.onchange = function () {\n            this.isAnswered = true;\n            if (this.isTimed) {\n                this.feedbackDiv.innerHTML = \"Your answer is automatically saved.\";\n            } else {\n                this.feedbackDiv.innerHTML = \"Your answer has not been saved yet!\";\n            }\n            $(this.feedbackDiv).removeClass(\"alert-success\");\n            $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        }.bind(this);\n        this.fieldSet.appendChild(document.createElement(\"br\"));\n        if (this.mathjax) {\n            this.renderedAnswer = document.createElement(\"div\");\n            $(this.renderedAnswer).addClass(\"latexoutput\");\n            this.fieldSet.appendChild(this.renderedAnswer);\n        }\n        this.buttonDiv = document.createElement(\"div\");\n        this.fieldSet.appendChild(this.buttonDiv);\n        this.submitButton = document.createElement(\"button\");\n        $(this.submitButton).addClass(\"btn btn-success\");\n        this.submitButton.type = \"button\";\n        this.submitButton.textContent = \"Save\";\n        this.submitButton.onclick = function () {\n            this.checkCurrentAnswer();\n            this.logCurrentAnswer();\n            this.renderFeedback();\n        }.bind(this);\n        this.buttonDiv.appendChild(this.submitButton);\n        this.randomSpan = document.createElement(\"span\");\n        this.randomSpan.innerHTML = \"Instructor's Feedback\";\n        this.fieldSet.appendChild(this.randomSpan);\n        this.otherOptionsDiv = document.createElement(\"div\");\n        $(this.otherOptionsDiv).css(\"padding-left:20px\");\n        $(this.otherOptionsDiv).addClass(\"journal-options\");\n        this.fieldSet.appendChild(this.otherOptionsDiv);\n        // add a feedback div to give user feedback\n        this.feedbackDiv = document.createElement(\"div\");\n        //$(this.feedbackDiv).addClass(\"bg-info form-control\");\n        //$(this.feedbackDiv).css(\"width:530px, background-color:#eee, font-style:italic\");\n        $(this.feedbackDiv).css(\"width:530px, font-style:italic\");\n        this.feedbackDiv.id = this.divid + \"_feedback\";\n        this.feedbackDiv.innerHTML = \"You have not answered this question yet.\";\n        $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        //this.otherOptionsDiv.appendChild(this.feedbackDiv);\n        this.fieldSet.appendChild(this.feedbackDiv);\n        if (this.attachment) {\n            let attachDiv = document.createElement(\"div\")\n            if (this.graderactive) {\n                // If in grading mode make a button to create a popup with the image\n                let viewButton = document.createElement(\"button\")\n                viewButton.type = \"button\"\n                viewButton.innerHTML = \"View Attachment\"\n                viewButton.onclick = this.viewFile.bind(this);\n                attachDiv.appendChild(viewButton);\n            } else {\n                // Otherwise make a button for the student to select a file to upload.\n                this.fileUpload = document.createElement(\"input\")\n                this.fileUpload.type = \"file\";\n                this.fileUpload.id = `${this.divid}_fileme`;\n                attachDiv.appendChild(this.fileUpload);\n            }\n            this.containerDiv.appendChild(attachDiv);\n        }\n        //this.fieldSet.appendChild(document.createElement(\"br\"));\n        $(this.origElem).replaceWith(this.containerDiv);\n        // This is a stopgap measure for when MathJax is not loaded at all.  There is another\n        // more difficult case that when MathJax is loaded asynchronously we will get here\n        // before MathJax is loaded.  In that case we will need to implement something\n        // like `the solution described here <https://stackoverflow.com/questions/3014018/how-to-detect-when-mathjax-is-fully-loaded>`_\n        if (typeof MathJax !== \"undefined\") {\n            this.queueMathJax(this.containerDiv);\n        }\n    }\n\n    renderMath(value) {\n        if (this.mathjax) {\n            value = value.replace(/\\$\\$(.*?)\\$\\$/g, \"\\\\[ $1 \\\\]\");\n            value = value.replace(/\\$(.*?)\\$/g, \"\\\\( $1 \\\\)\");\n            value = value.replace(/\\n/g, \"<br/>\"); // add line breaks\n            $(this.renderedAnswer).html(value);\n            this.queueMathJax(this.renderedAnswer);\n        }\n    }\n\n    async checkCurrentAnswer() {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n    }\n\n    async logCurrentAnswer(sid) {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n        let data = {\n            event: \"shortanswer\",\n            act: value,\n            answer: value,\n            div_id: this.divid,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n        if (this.attachment) {\n            await this.uploadFile();\n        }\n    }\n\n    renderFeedback() {\n        this.feedbackDiv.innerHTML = \"Your answer has been saved.\";\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n    setLocalStorage(data) {\n        if (!this.graderactive) {\n            let key = this.localStorageKey();\n            localStorage.setItem(key, JSON.stringify(data));\n        }\n    }\n    checkLocalStorage() {\n        // Repopulates the short answer text\n        // which was stored into local storage.\n        var answer = \"\";\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    var storedData = JSON.parse(ex);\n                    answer = storedData.answer;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                let solution = $(\"#\" + this.divid + \"_solution\");\n                solution.text(answer);\n                this.renderMath(answer);\n                this.feedbackDiv.innerHTML =\n                    \"Your current saved answer is shown above.\";\n                $(this.feedbackDiv).removeClass(\"alert-danger\");\n                $(this.feedbackDiv).addClass(\"alert alert-success\");\n            }\n        }\n    }\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        // sometimes data.answer can be null\n        if (!data.answer) {\n            data.answer = \"\";\n        }\n        this.answer = data.answer;\n        this.jTextArea.value = this.answer;\n        this.renderMath(this.answer);\n\n        let p = document.createElement(\"p\");\n        this.jInputDiv.appendChild(p);\n        var tsString = \"\";\n        if (data.timestamp) {\n            tsString = new Date(data.timestamp).toLocaleString();\n        } else {\n            tsString = \"\";\n        }\n        $(p).text(tsString);\n        if (data.last_answer) {\n            this.current_answer = \"ontime\";\n            let toggle_answer_button = document.createElement(\"button\");\n            toggle_answer_button.type = \"button\";\n            $(toggle_answer_button).text(\"Show Late Answer\");\n            $(toggle_answer_button).addClass(\"btn btn-warning\");\n            $(toggle_answer_button).css(\"margin-left\", \"5px\");\n\n            $(toggle_answer_button).click(\n                function () {\n                    var display_timestamp, button_text;\n                    if (this.current_answer === \"ontime\") {\n                        this.jTextArea.value = data.last_answer;\n                        this.answer = data.last_answer;\n                        display_timestamp = new Date(\n                            data.last_timestamp\n                        ).toLocaleString();\n                        button_text = \"Show on-Time Answer\";\n                        this.current_answer = \"late\";\n                    } else {\n                        this.jTextArea.value = data.answer;\n                        this.answer = data.answer;\n                        display_timestamp = tsString;\n                        button_text = \"Show Late Answer\";\n                        this.current_answer = \"ontime\";\n                    }\n                    this.renderMath(this.answer);\n                    $(p).text(`Submitted: ${display_timestamp}`);\n                    $(toggle_answer_button).text(button_text);\n                }.bind(this)\n            );\n\n            this.buttonDiv.appendChild(toggle_answer_button);\n        }\n        let feedbackStr = \"Your current saved answer is shown above.\";\n        if (typeof data.score !== \"undefined\") {\n            feedbackStr = `Score: ${data.score}`;\n        }\n        if (data.comment) {\n            feedbackStr += ` -- ${data.comment}`;\n        }\n        this.feedbackDiv.innerHTML = feedbackStr;\n\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n\n    disableInteraction() {\n        this.jTextArea.disabled = true;\n    }\n\n    async uploadFile() {\n        const files = this.fileUpload.files\n        const data = new FormData()\n        if (this.fileUpload.files.length > 0) {\n            data.append('file', files[0])\n            fetch(`/ns/logger/upload/${this.divid}`, {\n                method: 'POST',\n                body: data\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data)\n                })\n                .catch(error => {\n                    console.error(error)\n                })\n        }\n    }\n\n    viewFile() {\n        // Get the URL from the S3 API -- saved when we display in grader mode\n        if (this.attachURL) {\n            //window.open(this.attachURL, \"_blank\");\n            const image_window = window.open(\"\", \"_blank\")\n            image_window.document.write(`\n                  <html>\n                    <head>\n                    </head>\n                    <body>\n                      <img src=\"${this.attachURL}\" alt=\"Attachment\" >\n                    </body>\n                  </html>\n            `);\n        } else {\n            alert(\"No attachment for this student.\")\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=shortanswer]\").each(function () {\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                window.componentMap[this.id] = new ShortAnswer({\n                    orig: this,\n                    useRunestoneServices: eBookConfig.useRunestoneServices,\n                });\n            } catch (err) {\n                console.log(`Error rendering ShortAnswer Problem ${this.id}\n                Details: ${err}`);\n            }\n        }\n    });\n});\n","import ShortAnswer from \"./shortanswer.js\";\n\nexport default class TimedShortAnswer extends ShortAnswer {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.containerDiv);\n        this.isTimed = true;\n        this.hideButtons();\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        return \"I\"; // we ignore this in the grading\n    }\n    hideFeedback() {\n        $(this.feedbackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\n\nwindow.component_factory.shortanswer = function (opts) {\n    if (opts.timed) {\n        return new TimedShortAnswer(opts);\n    }\n    return new ShortAnswer(opts);\n};\n","/*==========================================\n========      Master timed.js     =========\n============================================\n===     This file contains the JS for    ===\n===     the Runestone timed component.   ===\n============================================\n===              Created By              ===\n===             Kirby Olson              ===\n===               6/11/15                ===\n==========================================*/\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport TimedFITB from \"../../fitb/js/timedfitb.js\";\nimport TimedMC from \"../../mchoice/js/timedmc.js\";\nimport TimedShortAnswer from \"../../shortanswer/js/timed_shortanswer.js\";\nimport ACFactory from \"../../activecode/js/acfactory.js\";\nimport TimedClickableArea from \"../../clickableArea/js/timedclickable\";\nimport TimedDragNDrop from \"../../dragndrop/js/timeddnd.js\";\nimport TimedParsons from \"../../parsons/js/timedparsons.js\";\nimport SelectOne from \"../../selectquestion/js/selectone\";\nimport \"../css/timed.less\";\n\n// Timed constructor\nexport default class Timed extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig;\n        this.origElem = orig; // the entire element of this timed assessment and all of its children\n        this.divid = orig.id;\n        this.children = this.origElem.childNodes;\n        this.visited = [];\n        this.timeLimit = 0;\n        this.limitedTime = false;\n        if (!isNaN($(this.origElem).data(\"time\"))) {\n            this.timeLimit = parseInt($(this.origElem).data(\"time\"), 10) * 60; // time in seconds to complete the exam\n            this.startingTime = this.timeLimit;\n            this.limitedTime = true;\n        }\n        this.showFeedback = true;\n        if ($(this.origElem).is(\"[data-no-feedback]\")) {\n            this.showFeedback = false;\n        }\n        this.showResults = false;\n        if ($(this.origElem).is(\"[data-result]\")) {\n            this.showResults = false;\n        }\n        this.random = false;\n        if ($(this.origElem).is(\"[data-random]\")) {\n            this.random = true;\n        }\n        this.showTimer = true;\n        if ($(this.origElem).is(\"[data-no-timer]\")) {\n            this.showTimer = false;\n        }\n        this.fullwidth = false;\n        if ($(this.origElem).is(\"[data-fullwidth]\")) {\n            this.fullwidth = true;\n        }\n        this.nopause = false;\n        if ($(this.origElem).is(\"[data-no-pause]\")) {\n            this.nopause = true;\n        }\n        eBookConfig.enableScratchAC = false;\n        this.running = 0;\n        this.paused = 0;\n        this.done = 0;\n        this.taken = 0;\n        this.score = 0;\n        this.incorrect = 0;\n        this.correctStr = \"\";\n        this.incorrectStr = \"\";\n        this.skippedStr = \"\";\n        this.skipped = 0;\n        this.currentQuestionIndex = 0; // Which question is currently displaying on the page\n        this.renderedQuestionArray = []; // list of all problems\n        this.getNewChildren();\n        // One small step to eliminate students from doing view source\n        // this won't stop anyone with determination but may prevent casual peeking\n        if (!eBookConfig.enableDebug) {\n            document.body.oncontextmenu = function () {\n                return false;\n            };\n        }\n        this.checkAssessmentStatus().then(\n            function () {\n                this.renderTimedAssess();\n            }.bind(this)\n        );\n    }\n\n    getNewChildren() {\n        this.newChildren = [];\n        let runestoneChildren = this.origElem.querySelectorAll(\".runestone\");\n        for (var i = 0; i < runestoneChildren.length; i++) {\n            this.newChildren.push(runestoneChildren[i]);\n        }\n    }\n\n    async checkAssessmentStatus() {\n        // Has the user taken this exam?  Inquiring minds want to know\n        // If a user has not taken this exam then we want to make sure\n        // that if a question has been seen by the student before we do\n        // not populate previous answers.\n        let sendInfo = {\n            div_id: this.divid,\n            course_name: eBookConfig.course,\n        };\n        console.log(sendInfo);\n        if (eBookConfig.useRunestoneServices) {\n            let request = new Request(\n                `${eBookConfig.new_server_prefix}/assessment/tookTimedAssessment`,\n                {\n                    method: \"POST\",\n                    headers: this.jsonHeaders,\n                    body: JSON.stringify(sendInfo),\n                }\n            );\n            let response = await fetch(request);\n            let data = await response.json();\n            data = data.detail;\n            this.taken = data.tookAssessment;\n            this.assessmentTaken = this.taken;\n            if (!this.taken) {\n                localStorage.clear();\n            }\n            console.log(\"done with check status\");\n            return response;\n        } else {\n            this.taken = false;\n            this.assessmentTaken = false;\n            return Promise.resolve();\n        }\n    }\n\n    /*===============================\n    === Generating new Timed HTML ===\n    ===============================*/\n    async renderTimedAssess() {\n        console.log(\"rendering timed \");\n        // create renderedQuestionArray returns a promise\n        //\n        this.createRenderedQuestionArray();\n        if (this.random) {\n            this.randomizeRQA();\n        }\n        this.renderContainer();\n        this.renderTimer();\n        await this.renderControlButtons();\n        this.containerDiv.appendChild(this.timedDiv); // This can't be appended in renderContainer because then it renders above the timer and control buttons.\n        if (this.renderedQuestionArray.length > 1) this.renderNavControls();\n        this.renderSubmitButton();\n        this.renderFeedbackContainer();\n        this.useRunestoneServices = eBookConfig.useRunestoneServices;\n        // Replace intermediate HTML with rendered HTML\n        $(this.origElem).replaceWith(this.containerDiv);\n        // check if already taken and if so show results\n        this.styleExamElements(); // rename to renderPossibleResults\n        this.checkServer(\"timedExam\", true);\n    }\n\n    renderContainer() {\n        this.containerDiv = document.createElement(\"div\"); // container for the entire Timed Component\n        if (this.fullwidth) {\n            // allow the container to fill the width - barb\n            $(this.containerDiv).attr({\n                style: \"max-width:none\",\n            });\n        }\n        this.containerDiv.classList.add(\"runestone-sphinx\");\n        this.containerDiv.id = this.divid;\n        this.timedDiv = document.createElement(\"div\"); // div that will hold the questions for the timed assessment\n        this.navDiv = document.createElement(\"div\"); // For navigation control\n        $(this.navDiv).attr({\n            style: \"text-align:center\",\n        });\n        this.flagDiv = document.createElement(\"div\"); // div that will hold the \"Flag Question\" button\n        $(this.flagDiv).attr({\n            style: \"text-align: center\",\n        });\n        this.switchContainer = document.createElement(\"div\");\n        this.switchContainer.classList.add(\"switchcontainer\");\n        this.switchDiv = document.createElement(\"div\"); // is replaced by the questions\n        this.timedDiv.appendChild(this.navDiv);\n        this.timedDiv.appendChild(this.flagDiv); // add flagDiv to timedDiv, which holds components for navigation and questions for timed assessment\n        this.timedDiv.appendChild(this.switchContainer);\n        this.switchContainer.appendChild(this.switchDiv);\n        $(this.timedDiv).attr({\n            id: \"timed_Test\",\n            style: \"display:none\",\n        });\n    }\n\n    renderTimer() {\n        this.wrapperDiv = document.createElement(\"div\");\n        this.timerContainer = document.createElement(\"P\");\n        this.wrapperDiv.id = this.divid + \"-startWrapper\";\n        this.timerContainer.id = this.divid + \"-output\";\n        this.wrapperDiv.appendChild(this.timerContainer);\n        this.showTime();\n    }\n\n    renderControlButtons() {\n        this.controlDiv = document.createElement(\"div\");\n        $(this.controlDiv).attr({\n            id: \"controls\",\n            style: \"text-align: center\",\n        });\n        this.startBtn = document.createElement(\"button\");\n        this.pauseBtn = document.createElement(\"button\");\n        $(this.startBtn).attr({\n            class: \"btn btn-success\",\n            id: \"start\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.startBtn.textContent = \"Start\";\n        this.startBtn.addEventListener(\n            \"click\",\n            async function () {\n                $(this.finishButton).hide(); // hide the finish button for now\n                $(this.flagButton).show();\n                let mess = document.createElement(\"p\");\n                mess.innerHTML =\n                    \"<strong>Warning: You will not be able to continue the exam if you close this tab, close the window, or navigate away from this page!</strong>  Make sure you click the Finish Exam button when you are done to submit your work!\";\n                this.controlDiv.appendChild(mess);\n                mess.classList.add(\"examwarning\");\n                await this.renderTimedQuestion();\n                this.startAssessment();\n            }.bind(this),\n            false\n        );\n        $(this.pauseBtn).attr({\n            class: \"btn btn-default\",\n            id: \"pause\",\n            disabled: \"true\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.pauseBtn.textContent = \"Pause\";\n        this.pauseBtn.addEventListener(\n            \"click\",\n            function () {\n                this.pauseAssessment();\n            }.bind(this),\n            false\n        );\n        if (!this.taken) {\n            this.controlDiv.appendChild(this.startBtn);\n        }\n        if (!this.nopause) {\n            this.controlDiv.appendChild(this.pauseBtn);\n        }\n        this.containerDiv.appendChild(this.wrapperDiv);\n        this.containerDiv.appendChild(this.controlDiv);\n    }\n\n    renderNavControls() {\n        // making \"Prev\" button\n        this.pagNavList = document.createElement(\"ul\");\n        $(this.pagNavList).addClass(\"pagination\");\n        this.leftContainer = document.createElement(\"li\");\n        this.leftNavButton = document.createElement(\"button\");\n        this.leftNavButton.innerHTML = \"&#8249; Prev\";\n        $(this.leftNavButton).attr(\"aria-label\", \"Previous\");\n        $(this.leftNavButton).attr(\"tabindex\", \"0\");\n        $(this.leftNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"prev\");\n        $(this.leftNavButton).css(\"cursor\", \"pointer\");\n        this.leftContainer.appendChild(this.leftNavButton);\n        this.pagNavList.appendChild(this.leftContainer);\n        // making \"Flag Question\" button\n        this.flaggingPlace = document.createElement(\"ul\");\n        $(this.flaggingPlace).addClass(\"pagination\");\n        this.flagContainer = document.createElement(\"li\");\n        this.flagButton = document.createElement(\"button\");\n        $(this.flagButton).addClass(\"flagBtn\");\n        this.flagButton.innerHTML = \"Flag Question\"; // name on button\n        $(this.flagButton).attr(\"aria-labelledby\", \"Flag\");\n        $(this.flagButton).attr(\"tabindex\", \"5\");\n        $(this.flagButton).attr(\"role\", \"button\");\n        $(this.flagButton).attr(\"id\", \"flag\");\n        $(this.flagButton).css(\"cursor\", \"pointer\");\n        this.flagContainer.appendChild(this.flagButton); // adding button to container\n        this.flaggingPlace.appendChild(this.flagContainer); // adding container to flaggingPlace\n        // making \"Next\" button\n        this.rightContainer = document.createElement(\"li\");\n        this.rightNavButton = document.createElement(\"button\");\n        $(this.rightNavButton).attr(\"aria-label\", \"Next\");\n        $(this.rightNavButton).attr(\"tabindex\", \"0\");\n        $(this.rightNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"next\");\n        this.rightNavButton.innerHTML = \"Next &#8250;\";\n        $(this.rightNavButton).css(\"cursor\", \"pointer\");\n        this.rightContainer.appendChild(this.rightNavButton);\n        this.pagNavList.appendChild(this.rightContainer);\n        this.ensureButtonSafety();\n        this.navDiv.appendChild(this.pagNavList);\n        this.flagDiv.appendChild(this.flaggingPlace); // adds flaggingPlace to the flagDiv\n        this.break = document.createElement(\"br\");\n        this.navDiv.appendChild(this.break);\n        // render the question number jump buttons\n        this.qNumList = document.createElement(\"ul\");\n        $(this.qNumList).attr(\"id\", \"pageNums\");\n        this.qNumWrapperList = document.createElement(\"ul\");\n        $(this.qNumWrapperList).addClass(\"pagination\");\n        var tmpLi, tmpA;\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            tmpLi = document.createElement(\"li\");\n            tmpA = document.createElement(\"a\");\n            tmpA.innerHTML = i + 1;\n            $(tmpA).css(\"cursor\", \"pointer\");\n            if (i === 0) {\n                $(tmpLi).addClass(\"active\");\n            }\n            tmpLi.appendChild(tmpA);\n            this.qNumWrapperList.appendChild(tmpLi);\n        }\n        this.qNumList.appendChild(this.qNumWrapperList);\n        this.navDiv.appendChild(this.qNumList);\n        this.navBtnListeners();\n        this.flagBtnListener(); // listens for click on flag button\n        $(this.flagButton).hide();\n    }\n\n    // when moving off of a question in an active exam:\n    // 1. show that the question has been seen, or mark it broken if it is in error.\n    // 2. check and log the current answer\n    async navigateAway() {\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"broken_exam\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"broken\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"exam_ended\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"toolate\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].question\n                .isAnswered\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"answered\");\n            await this.renderedQuestionArray[\n                this.currentQuestionIndex\n            ].question.checkCurrentAnswer();\n            if (!this.done) {\n                await this.renderedQuestionArray[\n                    this.currentQuestionIndex\n                ].question.logCurrentAnswer();\n            }\n        }\n    }\n    async handleNextPrev(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        var target = $(event.target).text();\n        if (target.match(/Next/)) {\n            // checks given text to match \"Next\"\n            if ($(this.rightContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex++;\n        } else if (target.match(/Prev/)) {\n            // checks given text to match \"Prev\"\n            if ($(this.leftContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex--;\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).hasClass(\"flagcolor\")\n        ) {\n            // checking for class\n            this.flagButton.innerHTML = \"Unflag Question\"; // changes text on button\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\"; // changes text on button\n        }\n    }\n\n    async handleFlag(event) {\n        // called when flag button is clicked\n        var target = $(event.target).text();\n        if (target.match(/Flag Question/)) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"flagcolor\"); // class will change color of question block\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).removeClass(\"flagcolor\"); // will restore current color of question block\n            this.flagButton.innerHTML = \"Flag Question\"; // also sets name back\n        }\n    }\n\n    async handleNumberedNav(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n\n        var target = $(event.target).text();\n        let oldIndex = this.currentQuestionIndex;\n        this.currentQuestionIndex = parseInt(target) - 1;\n        if (this.currentQuestionIndex > this.renderedQuestionArray.length) {\n            console.log(`Error: bad index for ${target}`);\n            this.currentQuestionIndex = oldIndex;\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\" // checking for flagcolor class\n            ).hasClass(\"flagcolor\")\n        ) {\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\";\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n    }\n\n    // set up events for navigation\n    navBtnListeners() {\n        // Next and Prev Listener\n        this.pagNavList.addEventListener(\n            \"click\",\n            this.handleNextPrev.bind(this),\n            false\n        );\n\n        // Numbered Listener\n        this.qNumList.addEventListener(\n            \"click\",\n            this.handleNumberedNav.bind(this),\n            false\n        );\n    }\n\n    // set up event for flag\n    flagBtnListener() {\n        this.flaggingPlace.addEventListener(\n            \"click\",\n            this.handleFlag.bind(this), // calls this to take action\n            false\n        );\n    }\n\n    renderSubmitButton() {\n        this.buttonContainer = document.createElement(\"div\");\n        $(this.buttonContainer).attr({\n            style: \"text-align:center\",\n        });\n        this.finishButton = document.createElement(\"button\");\n        $(this.finishButton).attr({\n            id: \"finish\",\n            class: \"btn btn-primary\",\n        });\n        this.finishButton.textContent = \"Finish Exam\";\n        this.finishButton.addEventListener(\n            \"click\",\n            async function () {\n                let skipped =\n                    this.renderedQuestionArray.filter((x) => !x.question.isAnswered).length;\n                let skipstr = skipped > 0 ? `You have skipped ${skipped} question(s).` : \"\";\n                if (\n                    window.confirm(\n                        `${skipstr} Clicking OK means you are ready to submit your answers and are finished with this assessment.`\n                    )\n                ) {\n                    await this.finishAssessment();\n                    $(this.flagButton).hide();\n                }\n            }.bind(this),\n            false\n        );\n        this.controlDiv.appendChild(this.finishButton);\n        $(this.finishButton).hide();\n        this.timedDiv.appendChild(this.buttonContainer);\n    }\n    ensureButtonSafety() {\n        if (this.currentQuestionIndex === 0) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.rightContainer).removeClass(\"disabled\");\n            }\n            $(this.leftContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex >=\n            this.renderedQuestionArray.length - 1\n        ) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.leftContainer).removeClass(\"disabled\");\n            }\n            $(this.rightContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex > 0 &&\n            this.currentQuestionIndex < this.renderedQuestionArray.length - 1\n        ) {\n            $(this.rightContainer).removeClass(\"disabled\");\n            $(this.leftContainer).removeClass(\"disabled\");\n        }\n    }\n    renderFeedbackContainer() {\n        this.scoreDiv = document.createElement(\"P\");\n        if (this.taken) {\n            this.scoreDiv.innerHTML = \"<h2>You have already taken this exam</h2>\";\n            this.scoreDiv.style.display = \"block\";\n        } else {\n            this.scoreDiv.id = this.divid + \"results\";\n            this.scoreDiv.style.display = \"none\";\n        }\n        this.containerDiv.appendChild(this.scoreDiv);\n    }\n\n    createRenderedQuestionArray() {\n        // this finds all the assess questions in this timed assessment\n        // We need to make a list of all the questions up front so we can set up navigation\n        // but we do not want to render the questions until the student has navigated\n        // Also adds them to this.renderedQuestionArray\n\n        // todo:  This needs to be updated to account for the runestone div wrapper.\n\n        // To accommodate the selectquestion type -- which is async! we need to wrap\n        // all of this in a promise, so that we don't continue to render the timed\n        // exam until all of the questions have been realized.\n        var opts;\n        for (var i = 0; i < this.newChildren.length; i++) {\n            var tmpChild = this.newChildren[i];\n            opts = {\n                state: \"prepared\",\n                orig: tmpChild,\n                question: {},\n                useRunestoneServices: eBookConfig.useRunestoneServices,\n                timed: true,\n                assessmentTaken: this.taken,\n                timedWrapper: this.divid,\n                initAttempts: 0,\n            };\n            if ($(tmpChild).children(\"[data-component]\").length > 0) {\n                tmpChild = $(tmpChild).children(\"[data-component]\")[0];\n                opts.orig = tmpChild;\n            }\n            if ($(tmpChild).is(\"[data-component]\")) {\n                this.renderedQuestionArray.push(opts);\n            }\n        }\n    }\n\n    randomizeRQA() {\n        var currentIndex = this.renderedQuestionArray.length,\n            temporaryValue,\n            randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = this.renderedQuestionArray[currentIndex];\n            this.renderedQuestionArray[currentIndex] =\n                this.renderedQuestionArray[randomIndex];\n            this.renderedQuestionArray[randomIndex] = temporaryValue;\n        }\n    }\n\n    async renderTimedQuestion() {\n        if (this.currentQuestionIndex >= this.renderedQuestionArray.length) {\n            // sometimes the user clicks in the event area for the qNumList\n            // But misses a number in that case the text is the concatenation\n            // of all the numbers in the list!\n            return;\n        }\n        // check the renderedQuestionArray to see if it has been rendered.\n        let opts = this.renderedQuestionArray[this.currentQuestionIndex];\n        let currentQuestion;\n        if (\n            opts.state === \"prepared\" ||\n            opts.state === \"forreview\" ||\n            (opts.state === \"broken_exam\" && opts.initAttempts < 3)\n        ) {\n            let tmpChild = opts.orig;\n            if ($(tmpChild).is(\"[data-component=selectquestion]\")) {\n                if (this.done && opts.state == \"prepared\") {\n                    this.renderedQuestionArray[\n                        this.currentQuestionIndex\n                    ].state = \"exam_ended\";\n                } else {\n                    // SelectOne is async and will replace itself in this array with\n                    // the actual selected question\n                    opts.rqa = this.renderedQuestionArray;\n                    let newq = new SelectOne(opts);\n                    this.renderedQuestionArray[this.currentQuestionIndex] = {\n                        question: newq,\n                    };\n                    try {\n                        await newq.initialize();\n                        if (opts.state == \"broken_exam\") {\n                            // remove the broken class from this question if we get here.\n                            $(\n                                `ul#pageNums > ul > li:eq(${this.currentQuestionIndex})`\n                            ).removeClass(\"broken\");\n                        }\n                    } catch (e) {\n                        opts.state = \"broken_exam\";\n                        this.renderedQuestionArray[this.currentQuestionIndex] =\n                            opts;\n                        console.log(\n                            `Error initializing question: Details ${e}`\n                        );\n                    }\n                }\n            } else if ($(tmpChild).is(\"[data-component]\")) {\n                let componentKind = $(tmpChild).data(\"component\");\n                this.renderedQuestionArray[this.currentQuestionIndex] = {\n                    question: window.component_factory[componentKind](opts),\n                    state: opts.state,\n                };\n            }\n        } else if (opts.state === \"broken_exam\") {\n            return;\n        }\n\n        currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        if (opts.state === \"forreview\") {\n            await currentQuestion.component_ready_promise;\n            await currentQuestion.checkCurrentAnswer();\n            currentQuestion.renderFeedback();\n            currentQuestion.disableInteraction();\n        }\n\n        if (!this.visited.includes(this.currentQuestionIndex)) {\n            this.visited.push(this.currentQuestionIndex);\n            if (\n                this.visited.length === this.renderedQuestionArray.length &&\n                !this.done\n            ) {\n                $(this.finishButton).show();\n            }\n        }\n\n        if (currentQuestion.containerDiv) {\n            if (\n                currentQuestion.containerDiv.classList.contains(\"runestone\") ==\n                false\n            ) {\n                currentQuestion.containerDiv.classList.add(\"runestone\");\n            }\n            $(this.switchDiv).replaceWith(currentQuestion.containerDiv);\n            this.switchDiv = currentQuestion.containerDiv;\n        }\n\n        // If the timed component has listeners, those might need to be reinitialized\n        // This flag will only be set in the elements that need it--it will be undefined in the others and thus evaluate to false\n        if (currentQuestion.needsReinitialization) {\n            currentQuestion.reinitializeListeners(this.taken);\n        }\n    }\n\n    /*=================================\n    === Timer and control Functions ===\n    =================================*/\n    handlePrevAssessment() {\n        $(this.startBtn).hide();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        $(this.finishButton).attr(\"disabled\", true);\n        this.running = 0;\n        this.done = 1;\n        // showFeedback sand showResults should both be true before we show the\n        // questions and their state of correctness.\n        if (this.showResults && this.showFeedback) {\n            $(this.timedDiv).show();\n            this.restoreAnsweredQuestions(); // do not log these results\n        } else {\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n    }\n    startAssessment() {\n        if (!this.taken) {\n            $(\"#relations-next\").hide(); // hide the next page button for now\n            $(\"#relations-prev\").hide(); // hide the previous button for now\n            $(this.startBtn).hide();\n            $(this.pauseBtn).attr(\"disabled\", false);\n            if (this.running === 0 && this.paused === 0) {\n                this.running = 1;\n                this.lastTime = Date.now();\n                $(this.timedDiv).show();\n                this.increment();\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"start\",\n                    div_id: this.divid,\n                });\n                var timeStamp = new Date();\n                var storageObj = {\n                    answer: [0, 0, this.renderedQuestionArray.length, 0],\n                    timestamp: timeStamp,\n                };\n                localStorage.setItem(\n                    this.localStorageKey(),\n                    JSON.stringify(storageObj)\n                );\n            }\n            $(window).on(\n                \"beforeunload\",\n                function (event) {\n                    // this actual value gets ignored by newer browsers\n                    if (this.done) {\n                        return;\n                    }\n                    event.preventDefault();\n                    event.returnValue =\n                        \"Are you sure you want to leave?  Your work will be lost! And you will need your instructor to reset the exam!\";\n                    return \"Are you sure you want to leave?  Your work will be lost!\";\n                }.bind(this)\n            );\n            window.addEventListener(\n                \"pagehide\",\n                async function (event) {\n                    if (!this.done) {\n                        await this.finishAssessment();\n                        console.log(\"Exam exited by leaving page\");\n                    }\n                }.bind(this)\n            );\n        } else {\n            this.handlePrevAssessment();\n        }\n    }\n    pauseAssessment() {\n        if (this.done === 0) {\n            if (this.running === 1) {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"pause\",\n                    div_id: this.divid,\n                });\n                this.running = 0;\n                this.paused = 1;\n                this.pauseBtn.innerHTML = \"Resume\";\n                $(this.timedDiv).hide();\n            } else {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"resume\",\n                    div_id: this.divid,\n                });\n                this.running = 1;\n                this.paused = 0;\n                this.increment();\n                this.pauseBtn.innerHTML = \"Pause\";\n                $(this.timedDiv).show();\n            }\n        }\n    }\n\n    showTime() {\n        if (this.showTimer) {\n            var mins = Math.floor(this.timeLimit / 60);\n            var secs = Math.floor(this.timeLimit) % 60;\n            var minsString = mins;\n            var secsString = secs;\n            if (mins < 10) {\n                minsString = \"0\" + mins;\n            }\n            if (secs < 10) {\n                secsString = \"0\" + secs;\n            }\n            var beginning = \"Time Remaining    \";\n            if (!this.limitedTime) {\n                beginning = \"Time Taken    \";\n            }\n            var timeString = beginning + minsString + \":\" + secsString;\n            if (this.done || this.taken) {\n                var minutes = Math.floor(this.timeTaken / 60);\n                var seconds = Math.floor(this.timeTaken % 60);\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n                timeString = \"Time taken: \" + minutes + \":\" + seconds;\n            }\n            this.timerContainer.innerHTML = timeString;\n            var timeTips = document.getElementsByClassName(\"timeTip\");\n            for (var i = 0; i <= timeTips.length - 1; i++) {\n                timeTips[i].title = timeString;\n            }\n        } else {\n            $(this.timerContainer).hide();\n        }\n    }\n\n    increment() {\n        // if running (not paused) and not taken\n        if (this.running === 1 && !this.taken) {\n            setTimeout(\n                function () {\n                    // When a browser loses focus, setTimeout may not be called on the\n                    // schedule expected.  Browsers are free to save power by lengthening\n                    // the interval to some longer time.  So we cannot just subtract 1\n                    // from the timeLimit we need to measure the elapsed time from the last\n                    // call to the current call and subtract that number of seconds.\n                    let currentTime = Date.now();\n                    if (this.limitedTime) {\n                        // If there's a time limit, count down to 0\n                        this.timeLimit =\n                            this.timeLimit -\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    } else {\n                        // Else count up to keep track of how long it took to complete\n                        this.timeLimit =\n                            this.timeLimit +\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    }\n                    this.lastTime = currentTime;\n                    localStorage.setItem(\n                        eBookConfig.email + \":\" + this.divid + \"-time\",\n                        this.timeLimit\n                    );\n                    this.showTime();\n                    if (this.timeLimit > 0) {\n                        this.increment();\n                        // ran out of time\n                    } else {\n                        $(this.startBtn).attr({\n                            disabled: \"true\",\n                        });\n                        $(this.finishButton).attr({\n                            disabled: \"true\",\n                        });\n                        this.running = 0;\n                        this.done = 1;\n                        if (!this.taken) {\n                            this.taken = true;\n                            // embed the message in the page -- an alert actually prevents\n                            // the answers from being submitted and if a student closes their\n                            // laptop then the answers will not be submitted ever!  Even when they\n                            // reopen the laptop their session cookie is likely invalid.\n                            let mess = document.createElement(\"h1\");\n                            mess.innerHTML =\n                                \"Sorry but you ran out of time. Your answers are being submitted\";\n                            this.controlDiv.appendChild(mess);\n                            this.finishAssessment();\n                        }\n                    }\n                }.bind(this),\n                1000\n            );\n        }\n    }\n\n    styleExamElements() {\n        // Checks if this exam has been taken before\n        $(this.timerContainer).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(this.scoreDiv).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(\".tooltipTime\").css({\n            margin: \"0\",\n            padding: \"0\",\n            \"background-color\": \"black\",\n            color: \"white\",\n        });\n    }\n\n    async finishAssessment() {\n        $(\"#relations-next\").show(); // show the next page button for now\n        $(\"#relations-prev\").show(); // show the previous button for now\n        if (!this.showFeedback) {\n            // bje - changed from showResults\n            $(this.timedDiv).hide();\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n        this.findTimeTaken();\n        this.running = 0;\n        this.done = 1;\n        this.taken = 1;\n        await this.finalizeProblems();\n        this.checkScore();\n        this.displayScore();\n        this.storeScore();\n        this.logScore();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        this.finishButton.disabled = true;\n        $(window).off(\"beforeunload\");\n        // turn off the pagehide listener\n        let assignment_id = this.divid;\n        setTimeout(function () {\n            jQuery.ajax({\n                url: eBookConfig.app + \"/assignments/student_autograde\",\n                type: \"POST\",\n                dataType: \"JSON\",\n                data: {\n                    assignment_id: assignment_id,\n                    is_timed: true,\n                },\n                success: function (retdata) {\n                    if (retdata.success == false) {\n                        console.log(retdata.message);\n                    } else {\n                        console.log(\"Autograder completed\");\n                    }\n                },\n            });\n        }, 2000);\n    }\n\n    // finalizeProblems\n    // ----------------\n    async finalizeProblems() {\n        // Because we have submitted each question as we navigate we only need to\n        // send the final version of the question the student is on when they press the\n        // finish exam button.\n\n        var currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        await currentQuestion.checkCurrentAnswer();\n        await currentQuestion.logCurrentAnswer();\n        currentQuestion.renderFeedback();\n        currentQuestion.disableInteraction();\n\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            let currentQuestion = this.renderedQuestionArray[i];\n            // set the state to forreview so we know that feedback may be appropriate\n            if (currentQuestion.state !== \"broken_exam\") {\n                currentQuestion.state = \"forreview\";\n                currentQuestion.question.disableInteraction();\n            }\n        }\n\n        if (!this.showFeedback) {\n            this.hideTimedFeedback();\n        }\n    }\n\n    // restoreAnsweredQuestions\n    // ------------------------\n    restoreAnsweredQuestions() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i];\n            if (currentQuestion.state === \"prepared\") {\n                currentQuestion.state = \"forreview\";\n            }\n        }\n    }\n\n    // hideTimedFeedback\n    // -----------------\n    hideTimedFeedback() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i].question;\n            currentQuestion.hideFeedback();\n        }\n    }\n\n    // checkScore\n    // ----------\n    // This is a simple all or nothing score of one point per question for\n    // that includes our best guess if a question was skipped.\n    checkScore() {\n        this.correctStr = \"\";\n        this.skippedStr = \"\";\n        this.incorrectStr = \"\";\n        // Gets the score of each problem\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var correct =\n                this.renderedQuestionArray[i].question.checkCorrectTimed();\n            if (correct == \"T\") {\n                this.score++;\n                this.correctStr = this.correctStr + (i + 1) + \", \";\n            } else if (correct == \"F\") {\n                this.incorrect++;\n                this.incorrectStr = this.incorrectStr + (i + 1) + \", \";\n            } else if (correct === null || correct === \"I\") {\n                this.skipped++;\n                this.skippedStr = this.skippedStr + (i + 1) + \", \";\n            } else {\n                // ignored question; just do nothing\n            }\n        }\n        // remove extra comma and space at end if any\n        if (this.correctStr.length > 0)\n            this.correctStr = this.correctStr.substring(\n                0,\n                this.correctStr.length - 2\n            );\n        else this.correctStr = \"None\";\n        if (this.skippedStr.length > 0)\n            this.skippedStr = this.skippedStr.substring(\n                0,\n                this.skippedStr.length - 2\n            );\n        else this.skippedStr = \"None\";\n        if (this.incorrectStr.length > 0)\n            this.incorrectStr = this.incorrectStr.substring(\n                0,\n                this.incorrectStr.length - 2\n            );\n        else this.incorrectStr = \"None\";\n    }\n    findTimeTaken() {\n        if (this.limitedTime) {\n            this.timeTaken = this.startingTime - this.timeLimit;\n        } else {\n            this.timeTaken = this.timeLimit;\n        }\n    }\n    storeScore() {\n        var storage_arr = [];\n        storage_arr.push(\n            this.score,\n            this.correctStr,\n            this.incorrect,\n            this.incorrectStr,\n            this.skipped,\n            this.skippedStr,\n            this.timeTaken\n        );\n        var timeStamp = new Date();\n        var storageObj = JSON.stringify({\n            answer: storage_arr,\n            timestamp: timeStamp,\n        });\n        localStorage.setItem(this.localStorageKey(), storageObj);\n    }\n    // _`timed exam endpoint parameters`\n    //----------------------------------\n    logScore() {\n        this.logBookEvent({\n            event: \"timedExam\",\n            act: \"finish\",\n            div_id: this.divid,\n            correct: this.score,\n            incorrect: this.incorrect,\n            skipped: this.skipped,\n            time_taken: this.timeTaken,\n        });\n    }\n    shouldUseServer(data) {\n        // We override the RunestoneBase version because there is no \"correct\" attribute, and there are 2 possible localStorage schemas\n        // --we also want to default to local storage because it contains more information specifically which questions are correct, incorrect, and skipped.\n        var storageDate;\n        if (localStorage.length === 0) return true;\n        var storageObj = localStorage.getItem(this.localStorageKey());\n        if (storageObj === null) return true;\n        try {\n            var storedData = JSON.parse(storageObj).answer;\n            if (storedData.length == 4) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[1] &&\n                    data.skipped == storedData[2] &&\n                    data.timeTaken == storedData[3]\n                )\n                    return true;\n            } else if (storedData.length == 7) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[2] &&\n                    data.skipped == storedData[4] &&\n                    data.timeTaken == storedData[6]\n                ) {\n                    return false; // In this case, because local storage has more info, we want to use that if it's consistent\n                }\n            }\n            storageDate = new Date(JSON.parse(storageObj[1]).timestamp);\n        } catch (err) {\n            // error while parsing; likely due to bad value stored in storage\n            console.log(err.message);\n            localStorage.removeItem(this.localStorageKey());\n            return true;\n        }\n        var serverDate = new Date(data.timestamp);\n        if (serverDate < storageDate) {\n            this.logScore();\n            return false;\n        }\n        return true;\n    }\n\n    checkLocalStorage() {\n        var len = localStorage.length;\n        if (len > 0) {\n            if (localStorage.getItem(this.localStorageKey()) !== null) {\n                this.taken = 1;\n                this.restoreAnswers(\"\");\n            } else {\n                this.taken = 0;\n            }\n        } else {\n            this.taken = 0;\n        }\n    }\n    async restoreAnswers(data) {\n        this.taken = 1;\n        var tmpArr;\n        if (data === \"\") {\n            try {\n                tmpArr = JSON.parse(\n                    localStorage.getItem(this.localStorageKey())\n                ).answer;\n            } catch (err) {\n                // error while parsing; likely due to bad value stored in storage\n                console.log(err.message);\n                localStorage.removeItem(this.localStorageKey());\n                this.taken = 0;\n                return;\n            }\n        } else {\n            // Parse results from the database\n            tmpArr = [\n                parseInt(data.correct),\n                parseInt(data.incorrect),\n                parseInt(data.skipped),\n                parseInt(data.time_taken),\n                data.reset,\n            ];\n            this.setLocalStorage(tmpArr);\n        }\n        if (tmpArr.length == 1) {\n            // Exam was previously reset\n            this.reset = true;\n            this.taken = 0;\n            return;\n        }\n        if (tmpArr.length == 4) {\n            // Accidental Reload OR Database Entry\n            this.score = tmpArr[0];\n            this.incorrect = tmpArr[1];\n            this.skipped = tmpArr[2];\n            this.timeTaken = tmpArr[3];\n        } else if (tmpArr.length == 5) {\n            this.score = tmpArr[0];\n            this.incorrect = tmpArr[1];\n            this.skipped = tmpArr[2];\n            this.timeTaken = tmpArr[3];\n        } else if (tmpArr.length == 7) {\n            // Loaded Completed Exam\n            this.score = tmpArr[0];\n            this.correctStr = tmpArr[1];\n            this.incorrect = tmpArr[2];\n            this.incorrectStr = tmpArr[3];\n            this.skipped = tmpArr[4];\n            this.skippedStr = tmpArr[5];\n            this.timeTaken = tmpArr[6];\n        } else {\n            // Set localStorage in case of \"accidental\" reload\n            this.score = 0;\n            this.incorrect = 0;\n            this.skipped = this.renderedQuestionArray.length;\n            this.timeTaken = 0;\n        }\n        if (this.taken) {\n            if (this.skipped === this.renderedQuestionArray.length) {\n                this.showFeedback = false;\n            }\n            this.handlePrevAssessment();\n        }\n        await this.renderTimedQuestion();\n        this.displayScore();\n        this.showTime();\n    }\n    setLocalStorage(parsedData) {\n        var timeStamp = new Date();\n        var storageObj = {\n            answer: parsedData,\n            timestamp: timeStamp,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n    displayScore() {\n        if (this.showResults) {\n            var scoreString = \"\";\n            var numQuestions;\n            var percentCorrect;\n            // if we have some information\n            if (\n                this.correctStr.length > 0 ||\n                this.incorrectStr.length > 0 ||\n                this.skippedStr.length > 0\n            ) {\n                scoreString = `Num Correct: ${this.score}. Questions: ${this.correctStr}<br>Num Wrong: ${this.incorrect}. Questions: ${this.incorrectStr}<br>Num Skipped: ${this.skipped}. Questions: ${this.skippedStr}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString +=\n                    \"Percent Correct: \" + percentCorrect.toFixed(2) + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            } else {\n                scoreString = `Num Correct: ${this.score}<br>Num Wrong: ${this.incorrect}<br>Num Skipped: ${this.skipped}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString +=\n                    \"Percent Correct: \" + percentCorrect.toFixed(2) + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            }\n            this.highlightNumberedList();\n        } else {\n            $(this.scoreDiv).html(\n                \"Thank you for taking the exam.  Your answers have been recorded.\"\n            );\n            this.scoreDiv.style.display = \"block\";\n        }\n    }\n    highlightNumberedList() {\n        var correctCount = this.correctStr;\n        var incorrectCount = this.incorrectStr;\n        var skippedCount = this.skippedStr;\n        correctCount = correctCount.replace(/ /g, \"\").split(\",\");\n        incorrectCount = incorrectCount.replace(/ /g, \"\").split(\",\");\n        skippedCount = skippedCount.replace(/ /g, \"\").split(\",\");\n        $(function () {\n            var numberedBtns = $(\"ul#pageNums > ul > li\");\n            if (numberedBtns.hasClass(\"answered\")) {\n                numberedBtns.removeClass(\"answered\");\n            }\n            for (var i = 0; i < correctCount.length; i++) {\n                var test = parseInt(correctCount[i]) - 1;\n                numberedBtns\n                    .eq(parseInt(correctCount[i]) - 1)\n                    .addClass(\"correctCount\");\n            }\n            for (var j = 0; j < incorrectCount.length; j++) {\n                numberedBtns\n                    .eq(parseInt(incorrectCount[j]) - 1)\n                    .addClass(\"incorrectCount\");\n            }\n            for (var k = 0; k < skippedCount.length; k++) {\n                numberedBtns\n                    .eq(parseInt(skippedCount[k]) - 1)\n                    .addClass(\"skippedCount\");\n            }\n        });\n    }\n}\n\n/*=======================================================\n=== Function that calls the constructors on page load ===\n=======================================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=timedAssessment]\").each(function (index) {\n        window.componentMap[this.id] = new Timed({\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        });\n    });\n});\n"],"names":["ShortAnswer","constructor","opts","super","orig","this","useRunestoneServices","eBookConfig","origElem","divid","id","question","innerHTML","optional","attachURL","$","is","mathjax","attachment","placeholder","data","renderHTML","caption","addCaption","checkServer","Prism","highlightAllUnder","containerDiv","document","createElement","addClass","getAttribute","newForm","name","action","appendChild","fieldSet","firstLegendDiv","jInputDiv","jOptionsDiv","jLabel","jTextArea","self","onchange","isAnswered","attr","css","rows","cols","isTimed","feedbackDiv","removeClass","bind","renderedAnswer","buttonDiv","submitButton","type","textContent","onclick","checkCurrentAnswer","logCurrentAnswer","renderFeedback","randomSpan","otherOptionsDiv","attachDiv","graderactive","viewButton","viewFile","fileUpload","replaceWith","MathJax","queueMathJax","renderMath","value","replace","html","getElementById","val","setLocalStorage","answer","timestamp","Date","sid","event","act","div_id","logBookEvent","uploadFile","key","localStorageKey","localStorage","setItem","JSON","stringify","checkLocalStorage","length","ex","getItem","parse","err","console","log","message","removeItem","text","restoreAnswers","p","tsString","toLocaleString","last_answer","current_answer","toggle_answer_button","click","display_timestamp","button_text","last_timestamp","feedbackStr","score","comment","disableInteraction","disabled","files","FormData","append","fetch","method","body","then","response","json","catch","error","window","open","write","alert","on","each","closest","componentMap","TimedShortAnswer","renderTimedIcon","hideButtons","hide","component","timeIconDiv","timeIcon","src","style","className","title","prepend","checkCorrectTimed","hideFeedback","component_factory","shortanswer","timed","Timed","children","childNodes","visited","timeLimit","limitedTime","isNaN","parseInt","startingTime","showFeedback","showResults","random","showTimer","fullwidth","nopause","enableScratchAC","running","paused","done","taken","incorrect","correctStr","incorrectStr","skippedStr","skipped","currentQuestionIndex","renderedQuestionArray","getNewChildren","enableDebug","oncontextmenu","checkAssessmentStatus","renderTimedAssess","newChildren","runestoneChildren","querySelectorAll","i","push","sendInfo","course_name","course","request","Request","new_server_prefix","headers","jsonHeaders","detail","tookAssessment","assessmentTaken","clear","Promise","resolve","createRenderedQuestionArray","randomizeRQA","renderContainer","renderTimer","renderControlButtons","timedDiv","renderNavControls","renderSubmitButton","renderFeedbackContainer","styleExamElements","classList","add","navDiv","flagDiv","switchContainer","switchDiv","wrapperDiv","timerContainer","showTime","controlDiv","startBtn","pauseBtn","class","tabindex","role","addEventListener","async","finishButton","flagButton","show","mess","renderTimedQuestion","startAssessment","pauseAssessment","tmpLi","tmpA","pagNavList","leftContainer","leftNavButton","rightNavButton","flaggingPlace","flagContainer","rightContainer","ensureButtonSafety","break","qNumList","qNumWrapperList","navBtnListeners","flagBtnListener","navigateAway","state","handleNextPrev","target","match","hasClass","j","handleFlag","handleNumberedNav","oldIndex","buttonContainer","filter","x","skipstr","confirm","finishAssessment","scoreDiv","display","tmpChild","timedWrapper","initAttempts","temporaryValue","randomIndex","currentIndex","Math","floor","currentQuestion","rqa","newq","initialize","e","componentKind","component_ready_promise","includes","contains","needsReinitialization","reinitializeListeners","handlePrevAssessment","restoreAnsweredQuestions","lastTime","now","increment","timeStamp","storageObj","preventDefault","returnValue","mins","secs","minsString","secsString","beginning","timeString","minutes","timeTaken","seconds","timeTips","getElementsByClassName","setTimeout","currentTime","email","width","margin","border","padding","color","findTimeTaken","finalizeProblems","checkScore","displayScore","storeScore","logScore","off","assignment_id","jQuery","ajax","url","app","dataType","is_timed","success","retdata","hideTimedFeedback","correct","substring","storage_arr","time_taken","shouldUseServer","storageDate","storedData","tmpArr","reset","parsedData","numQuestions","scoreString","toFixed","highlightNumberedList","correctCount","incorrectCount","skippedCount","split","numberedBtns","eq","k","index"],"sourceRoot":""}